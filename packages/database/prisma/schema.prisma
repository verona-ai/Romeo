// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../../../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")  
  directUrl = env("DIRECT_URL")
}

// ========================================
// ROMEO BUSINESS MODELS
// Business-specific data managed by Prisma
// Supabase Auth will handle user authentication
// ========================================

model Customer {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String
  phone     String?
  status    CustomerStatus @default(ACTIVE)
  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  // Relationships
  conversations Conversation[]

  @@index([email])
  @@index([status])
}

model Conversation {
  id          String   @id @default(cuid())
  customerId  String
  title       String?
  status      ConversationStatus @default(ACTIVE)
  metadata    Json?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Relationships
  customer    Customer @relation(fields: [customerId], references: [id], onDelete: Cascade)
  messages    Message[]
  
  @@index([customerId])
  @@index([status])
}

model Message {
  id             String   @id @default(cuid())
  conversationId String
  content        String
  role           MessageRole
  metadata       Json?
  createdAt      DateTime @default(now())
  
  // Relationships
  conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)
  
  @@index([conversationId])
  @@index([createdAt])
}


/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model mastra_evals {
  input         String
  output        String
  result        Json
  agent_name    String
  metric_name   String
  instructions  String
  test_info     Json?
  global_run_id String
  run_id        String
  created_at    DateTime  @db.Timestamp(6)
  createdAt     DateTime? @db.Timestamp(6)

  @@ignore
}

model mastra_messages {
  id         String   @id
  thread_id  String
  content    String
  role       String
  type       String
  createdAt  DateTime @db.Timestamp(6)
  resourceId String?

}

model mastra_resources {
  id            String   @id
  workingMemory String?
  metadata      Json?
  createdAt     DateTime @db.Timestamp(6)
  updatedAt     DateTime @db.Timestamp(6)
}

model mastra_threads {
  id         String   @id
  resourceId String
  title      String
  metadata   String?
  createdAt  DateTime @db.Timestamp(6)
  updatedAt  DateTime @db.Timestamp(6)

}

model mastra_traces {
  id           String   @id
  parentSpanId String?
  name         String
  traceId      String
  scope        String
  kind         Int
  attributes   Json?
  status       Json?
  events       Json?
  links        Json?
  other        String?
  startTime    BigInt
  endTime      BigInt
  createdAt    DateTime @db.Timestamp(6)
}

model mastra_workflow_snapshot {
  workflow_name String
  run_id        String
  resourceId    String?
  snapshot      String
  createdAt     DateTime @db.Timestamp(6)
  updatedAt     DateTime @db.Timestamp(6)

  @@unique([workflow_name, run_id])
}


// ========================================
// ENUMS
// ========================================

enum CustomerStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

enum ConversationStatus {
  ACTIVE
  CLOSED
  ARCHIVED
}

enum MessageRole {
  USER
  ASSISTANT
  SYSTEM
} 